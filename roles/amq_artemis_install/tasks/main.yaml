---
- name: Install java
  yum:
    name: '{{ java_package }}'
    state: latest

- name: Create group artemis
  ansible.builtin.group:
    name: artemis
    state: present

- name: Create user artemis
  ansible.builtin.user:
    name: artemis
    shell: /bin/false
    groups: artemis

- name: Extract artemis tar
  ansible.builtin.unarchive:
    src: '{{ artemis_tar_name }}'
    dest: '{{ artemis_install_path }}'

- name: Copy tar files to artemis directory
  ansible.builtin.copy:
    src: '{{ artemis_install_path }}/apache-artemis-{{ artemis_version }}/'
    dest: '{{ artemis_dir }}/'
    remote_src: yes

- name: Recursively remove unarchived amq directory
  ansible.builtin.file:
    path: '{{ artemis_install_path }}/apache-artemis-{{ artemis_version }}'
    state: absent

- name: Recursively change ownership of the artemis directory
  ansible.builtin.file:
    path: '{{ artemis_dir }}'
    state: directory
    recurse: yes
    owner: artemis
    group: artemis

- name: Recursively change permission to exec artemis /bin directory
  ansible.builtin.file:
    path: '{{ artemis_dir }}/bin'
    state: directory
    recurse: yes
    mode: o+x

- name: Create a broker directory if it does not exist
  ansible.builtin.file:
    path: '{{ broker_dir }}'
    state: directory
    mode: '0755'

- name: Create broker
  ansible.builtin.command: > 
    {{ artemis_dir }}/bin/artemis create {{ broker_dir }}/{{ broker_name }} 
    --user {{ broker_user }}
    --password {{ broker_password }}
    --require-login
    --force

# - name: Copy jdbc driver file
#   ansible.builtin.copy:
#     src: "{{ jdbc_driver_file_name }}"
#     dest: '{{ broker_dir }}/{{ broker_name }}/lib/'


- name: Template a bootstrap config file
  ansible.builtin.template:
    src: bootstrap.xml.j2
    dest: '{{ broker_dir }}/{{ broker_name }}/etc/bootstrap.xml'
    mode: '0644'

- name: Template a jolokia config file
  ansible.builtin.template:
    src: jolokia-access.xml.j2
    dest: '{{ broker_dir }}/{{ broker_name }}/etc/jolokia-access.xml'
    mode: '0644'


- name: Template a broker config file
  ansible.builtin.template:
    src: broker.xml.j2
    dest: '{{ broker_dir }}/{{ broker_name }}/etc/broker.xml'
    mode: '0644'


# - name: Open broker ports
#   ansible.posix.firewalld:
#     zone: public
#     port: "{{ item }}"
#     permanent: yes
#     immediate: yes
#     state: enabled
#   loop: "{{ broker_ports }}"

# - name: Stop firewalld
#   ansible.builtin.systemd:
#     state: stopped
#     enabled: no
#     name: firewalld

- name: Disable SELinux
  selinux:
    policy: targeted
    state: permissive

- name: Reboot host and wait for it to restart
  reboot:
    msg: "Reboot initiated by Ansible"
    connect_timeout: 5
    reboot_timeout: 600
    pre_reboot_delay: 0
    post_reboot_delay: 30
    test_command: whoami


- name: Recursively change ownership of the broker directory
  ansible.builtin.file:
    path: '{{ broker_dir }}/{{ broker_name }}'
    state: directory
    recurse: yes
    owner: artemis
    group: artemis


- name: Template artemis service file
  ansible.builtin.template:
    src: artemis.service.j2
    dest: '/etc/systemd/system/artemis.service'
    mode: '0644'

- name: Force systemd to reread configs
  ansible.builtin.systemd:
    daemon_reload: yes

# - name: Start and enable artemis service
#   ansible.builtin.systemd:
#     state: started
#     enabled: yes
#     name: artemis
